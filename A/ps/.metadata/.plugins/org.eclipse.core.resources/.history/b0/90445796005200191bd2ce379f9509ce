package Gui;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.JTextPane;
import javax.swing.UIManager;
import javax.swing.text.Document;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import javax.xml.stream.events.StartDocument;

public class Console {
	
	public static void main(String[] args)
	{
		
		new Console();
	}
	
	
	public JFrame frame;
	public JTextPane console;
	public JTextField input;
	public JScrollPane scrollpane;
	
	
	
	public StyledDocument document;
	boolean trace = false;
	
	
	public Console()
	{
		
		try
		{
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		}catch(Exception ex)
		{
			
		}
		
		frame = new JFrame();
		frame.setTitle("Console");
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);	
		
		console = new JTextPane();
		console.setEditable(false);
		console.setOpaque(false);
		
		
		 document = console.getStyledDocument();
		 
		input = new JTextField();
		input.setEditable(true);
		input.setForeground(Color.white);
		input.setCaretColor(Color.WHITE);
		input.setOpaque(false);
		
		
		input.addActionListener(new ActionListener ()
		{
			

			public void actionPerformed(ActionEvent e)
			{
				String text = input.getText();
				if(text.length()> 1)
				{
					
					//print(text +"\n", false);
					printline(text, false);
					doCommand(text);
					scrollBottom();
					
					input.selectAll();
				}
			}
		});
		
		
		input.addKeyListener(new KeyListener(){
			
			
			public void keyPressed(KeyEvent e)
			{
				
			}
			
			public void keyReleased(KeyEvent e)
			{
				
			}

			@Override
			public void keyTyped(KeyEvent e) {
				
				
			}
			
		});
		
		
		scrollpane = new JScrollPane(console);
		scrollpane.setBorder(null);
		scrollpane.setOpaque(false);
		scrollpane.getViewport().setOpaque(false);
		
		
		frame.add(input, BorderLayout.SOUTH);
		frame.add(scrollpane, BorderLayout.CENTER);
		
		
		frame.getContentPane().setBackground(new Color(50, 50 , 50));
		
		frame.setSize(660, 350);
		frame.setLocationRelativeTo(null);
		
		frame.setResizable(false);
		frame.setVisible(true);
		
	}
	
	
	public void doCommand(String s)
	{
		final String[] commands = s.split(" ");
		 try
		 {
			 if(commands[0].equalsIgnoreCase("clear"))
			 {
				 clear();
			 }
			 else if (commands[0].equalsIgnoreCase("start"))
			 {
				 String message ="";
				 for(int i = 0; i < commands.length; i++)
				 {
					 message += commands[i];
					 
					 if(i != commands.length - 1)
					 {
						 message += " ";
					 }
				 }
				 
				 JOptionPane.showMessageDialog(null, message, "Messege", JOptionPane.INFORMATION_MESSAGE);
			 }
			 else
			 {
				 printline(s,trace, new Color(255,255,255));
			 }
			 
		 }catch(Exception ex) {
			 printline("Error ->" + ex.getMessage(), trace, new Color(255,155,155) );
		 }
	}
	
	public void scrollTop()
	{
		console.setCaretPosition(0);
	}
	
	public void scrollBottom()
	{
		console.setCaretPosition(console.getDocument().getLength());
	}
	
	
	public void print(String s, boolean trace)
	{
		print(s,trace,new Color(255,255,255));
	}
	
	
	public void print(String s, boolean trace, Color c)
	{
		Style style = console.addStyle("Style", null);
		StyleConstants.setForeground(style, c);
		
		if (trace)
		{
			Throwable t = Throwable();
			StackTraceElement[] elements = t.getStackTrace();
			String caller = elements[0].getClassName();
			
			s = caller + " -> " + s;
		}
		
		try
		{
			document.insertString(document.getLength(), s, style);
		}
		catch(Exception ex) {}
		
		
	}

	public void printline(String s , boolean trace)
	{
		printline(s, trace, new Color(255,255,255));
	}
	
	
	public void printline(String s , boolean trace,Color c)
	{
		print(s + "\n",trace, c);
	}
	
	
	public void clear()
	{
		try
		{
			
			document.remove(0, document.getLength());
			
		}catch(Exception ex)
		{
			
		}
	}
	
	

	private Throwable Throwable() {
		// TODO Auto-generated method stub
		return null;
	}
	
	
	
}
